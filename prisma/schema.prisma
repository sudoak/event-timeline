// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["filterJson"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         String   @id @unique
  name       String
  email      String   @unique
  profilePic String
  contact    String
  address    String?
  pincode    Int?
  gst        String?
  events     Event[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Event {
  id            Int                @id @default(autoincrement())
  eventName     String
  referenceName String?
  startDate     DateTime
  endDate       DateTime
  User          User               @relation(fields: [userId], references: [id])
  userId        String
  status        EventStatus        @default(QUOTATION_GIVEN)
  inventory     ExtendedInventory?
  decoration    Decoration[]
  timeline      Timeline[]
  password      String             @default("123456")
  client        Client?
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
}

model Client {
  id      Int   @id @default(autoincrement())
  event   Event @relation(fields: [eventId], references: [id])
  eventId Int   @unique
  clientName String
  contact String
  groomName String?
  brideName String?
  fatherName String?
  motherName String?
  retireName String?
  birthDayName String?
}

model ExtendedInventory {
  id        Int      @id @default(autoincrement())
  eventId   Int      @unique
  pendal    Json
  table     Json
  plates    Int      @default(0)
  buckets   Int      @default(0)
  washBasin Int      @default(0)
  chairs    Int      @default(0)
  spoons    Int      @default(0)
  basin     Int      @default(0)
  Event     Event    @relation(fields: [eventId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Decoration {
  id             Int            @id @default(autoincrement())
  eventId        Int
  Event          Event          @relation(fields: [eventId], references: [id])
  decorationId   Int
  DecorationMeta DecorationMeta @relation(fields: [decorationId], references: [id])
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
}

model DecorationMeta {
  id         Int            @id @default(autoincrement())
  imageUrl   String
  category   DecorationType
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt
  Decoration Decoration[]
}

model Timeline {
  id        Int            @id @default(autoincrement())
  event     Event          @relation(fields: [eventId], references: [id])
  eventId   Int
  name      String
  desc      String
  status    TimelineStatus @default(IN_FUTURE)
  pics      Json
  datetime  DateTime       @default(now())
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
}

// Enums
enum EventStatus {
  IN_PROGRESS
  IN_FUTURE
  QUOTATION_GIVEN
  COMPLETED
}

enum TimelineStatus {
  IN_FUTURE
  COMPLETED
  IN_PROGRESS
}

enum DecorationType {
  IN
  OUT
  CAR
  BEDROOM
}
